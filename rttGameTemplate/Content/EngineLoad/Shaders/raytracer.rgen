#version 460
#extension GL_EXT_ray_tracing: require
layout (binding = 0, rgba8) uniform image2D colorBuffer;
layout (binding = 1) uniform accelerationStructureEXT topLevelAS;
layout (binding = 2) uniform res {
  vec2 resData;
} resolution;

struct hitPayload
{
  vec3 hitValue;
};
layout(location = 0) rayPayloadEXT hitPayload prd;

void main() {

    vec2 coords = vec2(0.0, 0.0);
    coords.r = float(gl_LaunchIDEXT.x) / float(gl_LaunchSizeEXT.x);
    coords.g = float(gl_LaunchIDEXT.y) / float(gl_LaunchSizeEXT.y);
    
    vec2 texCoords = (coords-0.5)/resolution.resData.yx*resolution.resData.y;

    vec3 origin = vec3(-5,0,0);

    vec3 direction = normalize(vec3(1,texCoords));

    traceRayEXT(topLevelAS, // acceleration structure
          gl_RayFlagsOpaqueEXT,       // rayFlags
          0xFF,           // cullMask
          0,              // sbtRecordOffset
          0,              // sbtRecordStride
          0,              // missIndex
          origin,     // ray origin
          0.001,           // ray min range
          direction,  // ray direction
          1000,           // ray max range
          0               // payload (location = 0)
    );
     imageStore(colorBuffer, ivec2(gl_LaunchIDEXT.xy), vec4(prd.hitValue, 0.0));
}