#version 460
#extension GL_EXT_ray_query : require
layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
layout (binding = 0, rgba8) uniform image2D colorBuffer;
layout (binding = 1) uniform res {
    vec2 resolution;
};


vec2 sphIntersect(in vec3 origin, in vec3 direction, float radius) {
    float b = dot(origin,direction);
    float c = dot(origin,origin) - radius*radius;
    float h = b*b-c;
    if (h<0.0) return vec2(0.0);
    h = sqrt(h);
    return vec2(-b-h,-b+h);
}
void main() {
    
    ivec2 screen_pos = ivec2(gl_GlobalInvocationID.x,gl_GlobalInvocationID.y);

    vec2 texCoord = vec2(0.0, 0.0);
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
	
    texCoord.x = float(texelCoord.x-0.5)/(gl_NumWorkGroups.x*gl_WorkGroupSize.x);
    texCoord.y = float(texelCoord.y-0.5)/(gl_NumWorkGroups.y*gl_WorkGroupSize.y);

    vec2 uv = (texCoord-0.5)*resolution.xy/resolution.y;
    vec3 origin = vec3(-5,0,0);
    vec3 direction = normalize(vec3(1,uv));
    vec3 pixel_color = vec3(0.0);
    for (int i = 0;i<10000;i++) {
        pixel_color = vec3(sphIntersect(origin,direction,1).x);
    }
    

    imageStore(colorBuffer,screen_pos, vec4(pixel_color,1.0));
}